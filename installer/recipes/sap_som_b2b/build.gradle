apply plugin: 'installer-platform-plugin'
apply plugin: 'installer-addon-plugin'
apply plugin: 'installer-datahub-plugin'

def platformCfg = {

	 localProperties { 
		
		/* please adapt the number ranges according to the settings in the ERP backend */
        property 'keygen.customer.sap_customer_id.start', '0000490000'
        property 'keygen.customer.sap_contact_id.start', '0000490000'
        
        /* config async order management - order number */
        property 'keygen.order.code.start', '0006200000'
  
        property 'sapcustomerexchange.outbound.datahub.feed', 'SAPCONSUMER_OUTBOUND_FEED'
        
        /* config sapcoreconfiguration */
        property 'sapcoreconfiguration.datahuboutbound.enabled', 'true'
        
        /*  config async order management */
        property 'numberseries.cache.size.order_code', '1'
        property 'saporderexchange.orderoutbound.maxRetries', '3'
  		property 'log4j.logger.de.hybris.platform.sap.orderexchange', 'debug'
        property 'datahubadapter.datahuboutbound.url','http://localhost:8080/datahub-webapp/v1'
		
		/* disable hmc autologin */
        property 'hmc.default.autologin', 'false'
        property 'hmc.default.login', ''
        property 'hmc.default.password', ''

		/* for sap productconfiguration */
		property 'crm.system_type', 'Microsoft SQL Server 2'	
		property 'crm.database_hostname', 'database.hostname.url'
		property 'crm.database', 'databasename'
		property 'crm.database_port', '1433'
		property 'crm.database_user', 'user'
		property 'crm.database_password', 'password'
		property 'crm.ssc_jndi_usage','false'
		property 'crm.ssc_jndi_datasource','jdbc/datasourcename'
		property 'build.parallel','true'
		    
	} 
	
	 extensions {
	 	
	 	/* SAP extensions */
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/core'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/masterdata'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/synchronousPricing'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/synchronousOM'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/availability'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/testsupport'

		scanPath '${HYBRIS_BIN_DIR}/ext-integration/sap/productconfig' 
	
		/* sap productconfig extensions*/
		extensionNames 'sapproductconfigruntimeinterface', 'sapproductconfigfacades','sapproductconfigservices'

		scanPath '${HYBRIS_BIN_DIR}/ext-integration/sap/creditCheck'
		
		/* sap creditcheck extension - technical dependency */
		extensionNames 'sapcreditcheck' 		
		
		/* ext-addon for b2b */
		extensionNames 'secureportaladdon','b2bacceleratoraddon','commerceorgaddon'
	 
	    /* ext-platform */
        extensionNames 'mcc'
        
		/* powertools store for b2b */
		extensionNames 'powertoolsstore'
 		
 		
        /* ext-commerce */
        extensionNames 'btgcockpit', 'commercesearchhmc',   'oci', 'wishlist',             
                	   'b2badmincockpit','b2bacceleratorservices','b2bapprovalprocess', 'b2bcommerce'

        /* ext-data */
        extensionNames 'commercesearchsampledata'

        /* ext-content */
        extensionNames 'bmecathmc', 'importcockpit', 'classificationsystemshmc'

        /* ext-channel */
        extensionNames 'mobileoptionals'

		/* solrserver */
		extName 'solrserver'

        /* ext-template */
        extensionNames  'ycommercewebserviceshmc', 'yacceleratorfulfilmentprocess', 'yaddon', 'yacceleratortest', 'yacceleratorcore',
                'yacceleratorstorefront', 'yacceleratorinitialdata', 'yacceleratorcockpits',  'yinstoreinitialdata'       

        /* this loads the adapter extension, responsible for communication */
        extensionNames  'datahubadapter','datahubbackoffice'       
    	
    	/* ext-backoffice */
	    extensionNames 'basecommercebackoffice','b2bcommercebackoffice', 'commercesearchbackoffice'     
    	
	 }
	}

def thePlatform = platformFactory.createPlatform platformCfg

def CATALINA_OPTS = "-Xms4096m -Xmx4096m -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:+CMSIncrementalMode -XX:+CMSIncrementalPacing"

def datahubServerId = 'datahub-tomcat'

def datahubCfg = {

    libraries {

        propertyFile "local.properties", {
        
  			/* datahub settings */	
  			property 'datahub.extension.exportURL', 'http://localhost:9001/datahubadapter'
            property 'datahub.extension.userName', 'admin'
            property 'datahub.extension.password', 'nimda'
			property 'datahub.encryption.key.path', 'encryption-key.txt'
            property 'datahub.server.url', 'http://localhost:8080/datahub-webapp/v1'

			/* common settings */
            property 'targetsystem.hybriscore.url', 'http://localhost:9001/datahubadapter'
            property 'targetsystem.hybriscore.username', 'admin'
            property 'targetsystem.hybriscore.password', 'nimda'

            property 'targetsystem.saperp.url', 'http://saperp.url'
            property 'targetsystem.saperp.username', 'username'
            property 'targetsystem.saperp.password', 'password'
            property 'targetsystem.saperp.receivername', 'ERP RFC destination name'

			/* sapcoreconfiguration */
            property 'sapcoreconfiguration.autocompose.pools', 'GLOBAL,SAPCONFIGURATION_POOL,SAPCUSTOMER_INBOUND_POOL,SAPCONSUMER_INBOUND_POOL,SAPCONSUMER_OUTBOUND_POOL,SAPORDER_INBOUND_POOL,SAPORDER_OUTBOUND_POOL'
            property 'sapcoreconfiguration.autopublish.targetsystemsbypools', 'GLOBAL.HybrisCore,GLOBAL.SapErpSystem,SAPCUSTOMER_INBOUND_POOL.HybrisCore,SAPCONSUMER_INBOUND_POOL.HybrisCore,SAPCONSUMER_OUTBOUND_POOL.SapErpSystem,SAPORDER_OUTBOUND_POOL.SapErpSystem,SAPORDER_INBOUND_POOL.HybrisCore'
            property 'sapcoreconfiguration.autopublish.sleeptime', '5000'
            property 'sapcoreconfiguration.autopublish.initialsleeptime', '5000'
            property 'sapcoreconfiguration.pool', 'SAPCONFIGURATION_POOL'
			
			/* sapcustomer */
            property 'sapcustomer.language', 'en'

          	/* sapidocoutboundadapter */
            property 'sapidocoutboundadapter.usedynamicidocnumberoffset', 'true'
            property 'sapidocoutboundadapter.receivername', 'ERP RFC destination name'
		    property 'sapidocoutboundadapter.sendername', 'sendername'
            property 'sapidocoutboundadapter.senderport', 'senderport'
        }
    }


    extensionDir platformHome + "/../ext-integration/datahub/extensions/sap"
    extensions 'sapcoreconfiguration','sapcustomer-raw', 'sapcustomer-canonical', 'sapcustomer-target','sapidocintegration', 'sapidocoutboundadapter',
    'saporder-raw', 'saporder-canonical', 'saporder-target',  'sapproduct-raw', 'sapproduct-canonical', 'sapproduct-target', 
    'sappricing-raw', 'sappricing-canonical', 'sappricing-target','party-canonical'


    webappDir platformHome + "/../ext-integration/datahub/web-app"

    ports {
        http 8080
        ssl 9793
    }
}
	
task setupPlatform << {
   
    thePlatform.setup()
    
    thePlatform.project.addons {
        names "sapcoreaddon,sappricingproductcarouseladdon,ysapordermgmtb2baddon,secureportaladdon,b2bacceleratoraddon,commerceorgaddon"
        template "yacceleratorstorefront"
        storeFronts "yacceleratorstorefront"
        platform thePlatform
    }

}

task setupDataHub << {

	datahub(datahubServerId).setup datahubCfg
}

task setup(dependsOn: [setupPlatform, setupDataHub])


task initialize << {
    
    thePlatform.build()
    thePlatform.initialize()
}

task startPlatform << {

	thePlatform.start()
}


task startDataHub << {

	datahub(datahubServerId).start CATALINA_OPTS
}

task start(dependsOn: [startPlatform, startDataHub])



task build(dependsOn: [setup]) << {
   
       thePlatform.build()
}

task stopPlatform << {

	thePlatform.stopInBackground()
}

task stopDataHub << {

	datahub(datahubServerId).stop()
}

task stop(dependsOn: [stopPlatform, stopDataHub])


