def config = {
		localProperties {
				property 'commerceservices.default.desktop.ui.experience', 'desktop'
		property 'csrf.allowed.url.patterns', '/[^/]+(/[^?]*)+(sop/response)$,/[^/]+(/[^?]*)+(merchant_callback)$,/[^/]+(/[^?]*)+(hop/response)$,/[^/]+(/[^?]*)+(language)$,/[^/]+(/[^?]*)+(currency)$,/(events)$'
				property 'log4j.logger.de.hybris.eventtracking.publisher', 'DEBUG'

				property 'eventtrackingwsaddon.events_endpoint.enabled',' true'
				property 'spring.profiles.active', 'eventtrackingpublisher_activemq'
				property 'eventtrackingpublisher.jms.amq.broker.url', 'tcp://localhost:61616'
				property 'eventtrackingpublisher.jms.amq.queue.name', 'HYBRIS'
		}

		extensions {
			extName 'mcc'
			extName 'backoffice'
			extName 'commercesearchbackoffice'
			extName 'commerceservicesbackoffice'
			extName 'solrfacetsearchbackoffice'
			extName 'solrserver'
			extName 'yacceleratorcockpits'
			extName 'yacceleratorinitialdata'
			extName	'yacceleratorfulfilmentprocess'
			extName 'yacceleratorstorefront'
			extName 'yaddon'
			extName 'ycommercewebservices'
	
			extName 'electronicsstore'
			extName 'apparelstore'
	
			extName 'liveeditaddon'
			extName 'acceleratorwebservicesaddon'
			extName 'hybrisanalyticsaddon'	
			extName 'eventtrackingwsaddon'

			extName 'eventtrackingservices'
			extName 'eventtrackingpublisher'
			extName 'eventtrackingmodel'

		}
}

task setup << {
		apply plugin: 'installer-platform-plugin'
		apply plugin: 'installer-addon-plugin'
		def pl = platform(config)
		pl.setup()

		pl.project.addons {
				names "liveeditaddon,hybrisanalyticsaddon,eventtrackingwsaddon"
				template "yacceleratorstorefront"
				storeFronts "yacceleratorstorefront"
				platform pl
		}

		pl.project.addons {
				names "acceleratorwebservicesaddon"
				template "ycommercewebservices"
				storeFronts "ycommercewebservices"
				platform pl
		}
}

task initialize << {
		apply plugin: 'installer-platform-plugin'
		def pl = platform(config)
		pl.build()
		pl.initialize()
}


task start << {
		apply plugin: 'installer-platform-plugin'
		def pl = platform(config)
		pl.start()
}
